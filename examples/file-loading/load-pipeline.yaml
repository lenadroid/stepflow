name: "File Loading Sales Pipeline"
description: "Load sales data from file and process it"

input_schema:
  type: object
  properties:
    data_file_path:
      type: string
      description: "Path to the sales data file"
    target_revenue:
      type: number
      description: "Target revenue for analysis"

steps:
  # Load the sales data from file  
  - id: load_sales_data
    component: "builtins://load_file"
    args:
      path: { $from: "$input", path: "data_file_path" }

  # Extract the sales_data array using Python
  - id: extract_sales_array
    component: python://extract_sales_data
    args:
      data: { $from: "load_sales_data", path: "data" }

  # Now process the sales data array
  - id: calculate_total_revenue
    component: python://sum_field
    args:
      data: { $from: "extract_sales_array", path: "data" }
      field: "revenue"

  - id: count_sales
    component: python://count_items
    args:
      data: { $from: "extract_sales_array", path: "data" }

  - id: calculate_average_sale
    component: python://average_field
    args:
      data: { $from: "extract_sales_array", path: "data" }
      field: "revenue"

  - id: calculate_performance_ratio
    component: python://divide
    args:
      a: { $from: "calculate_total_revenue", path: "result" }
      b: { $from: "$input", path: "target_revenue" }

outputs:
  file_metadata: { $from: "load_sales_data", path: "metadata" }
  total_revenue: { $from: "calculate_total_revenue", path: "result" }
  sales_count: { $from: "count_sales", path: "result" }
  average_sale: { $from: "calculate_average_sale", path: "result" }
  performance_ratio: { $from: "calculate_performance_ratio", path: "result" }